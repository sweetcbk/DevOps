=======================================================================       
   *** Docker Installation Process ***      
=======================================================================
  Create Docker-Hub Acount [ URL:-https://hub.docker.com/ ]
=======================================================================
  Create 1 VM with 100GB HDD & Ubuntu ISO
=======================================================================
  Docker-Hub ID:ronitcdac Password:Cdac@1234
-----------------------------------------------------------------------
hpcsa@server:~$ su root 
hpcsa@server:~$ sudo passwd root
root@server:/home/hpcsa# cd
root@server:~# cd /etc/gdm3/
root@server:/etc/gdm3# ls
root@server:/etc/gdm3# vi custom.conf
				------------------------------ 
				AllowRoot=true (Add this line)
				------------------------------
root@server:/etc/gdm3# cd ..
root@server:/etc# cd pam.d/
root@server:/etc/pam.d# ls
root@server:/etc/pam.d# nano gdm-password 
				--------------------------------- 
				 Comment Second line (root user)
				---------------------------------
root@server:~# apt update
root@server:~# apt-get install docker* -y
root@server:~# docker -version
root@server:~# which docker
root@server:~# systemctl start docker
root@server:~# systemctl enable docker
root@server:~# systemctl status docker
root@server:~# docker ps    #(show runing container)
root@server:~# docker login
root@server:~# docker pull ubuntu
root@server:~# docker pull ubuntu:18.04
root@server:~# docker images
root@server:~# docker rmi e28a50f651f9                #(Delete Image. Image ID-e28a50f651f9) 
root@server:~# docker ps   #(Ope in New terminal)
root@server:~# docker run --name d1 -ti ubuntu:18.04  #(Open in New terminal)
-------------------------------------------------------------------------------
root@9720e66261a3:/# apt update                                                          
root@9720e66261a3:/# apt-get install apache2
root@9720e66261a3:/# apt-get install nano
root@9720e66261a3:/var/www/html# rm index.html 
root@9720e66261a3:/var/www/html# ls
root@9720e66261a3:/var/www/html# nano index.html
root@9720e66261a3:/var/www/html# cat index.html
root@server:~# docker ps   					#(Open in New terminal)
root@server:~# docker inspect 9720e66261a3 	      #(Open in New terminal)
root@9720e66261a3:/var/www/html# apt-get install curl
root@server:~# docker ps -a					#(Open in New terminal)
root@server:~# docker start d1     				#(Open in New terminal) [D1 is Container-Name]
root@server:~# docker attach d1                       #(Open in New terminal) [D1 is Container-Name]
root@server:~# docker stop d1
root@server:~# docker rm d1                           #(Delete Container [D1 is Container-Name])




=========================================================================================================
day 2
=================
root@server:~# docker run -ti centos
root@server:~# docker images
root@server:~# docker run -d -ti --privileged 5d0da3dc9764 /usr/sbin/init
[root@35766604b68a /]# sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-*
[root@35766604b68a /]# sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-*
root@server:~# docker exec -ti u1 /bin/bash
[root@35766604b68a /]# yum install httpd curl nano -y
[root@35766604b68a /]# cd /var/www/html/
[root@35766604b68a html]# ls
[root@35766604b68a html]# nano index.html
[root@35766604b68a html]# nano index.html
[root@35766604b68a html]# systemctl start httpd
[root@35766604b68a html]# curl 172.17.0.2








====================================================================================================
   
   root@server:~#  docker run --name web1 nginx
   root@server:~#  docker rm web1
   root@server:~#  docker ps
   root@server:~#  docker rm 0b5ee57e82cf
   root@server:~#  docker stop 0b5ee57e82cf
   root@server:~#  docker ps
   root@server:~#  docker run --name web1 -p 8000:80 -d nginx
   root@server:~#  docker ps
   root@server:~#  docker run --name web2 -p 8010:80 -d -v /root/website/:/usr/share/nginx/html/ nginx

-----------------------------------------------------------------------------------------------------



   root@server:~#  mkdir portfolio
   root@server:~#  apt-get install git
   root@server:~#  cd portfolio/
   root@server:~#  git clone https://github.com/varadbhogayata/varadbhogayata.github.io.git
   root@server:~#  docker run --name portfolio2 -p 8022:80 -d -v /root/portfolio/varadbhogayata.github.io/:/usr/share/nginx/html/ nginx

-------------------------------------------------------------------------------------------------------
For Manual IP assign in NGINX
-----------------------------
root@server:~# docker network ls
root@server:~# docker network create --subnet 172.18.0.0/16 --ip-range 172.18.0.10/24 lab4
root@server:~# docker run --name web8 -d -p 8070:80 --network=lab4 --ip=172.18.0.10 -v /root/website/:/usr/share/nginx/html/ nginx
root@server:~# docker inspect web8

-----------------------------------------------------------------------------------------------------
Docker Compose
-----------------------------------------------------------------------------------------------------
root@server:~# nano hpcsa.yaml
---------------------------------------------                                
version: '3.9'
services:
    web1:
       image: nginx
       ports:
          - 9000:80
       volumes:
          - /root/website/:/usr/share/nginx/html/
    web2:
       image: httpd
       ports:
          - 9010:80
    c1:
       image: ubuntu
       tty: true
       stdin_open: true

---------------------------------------------------
root@server:~# docker-compose -f -v hpcsa.yaml
root@server:~# docker-compose -f hpcsa.yaml up -d    [open web browser url:-localhost:9000/9010]
root@server:~# docker attach root_c1_1



Ans:
------------------------------------
root@server:~#  nano hpcsa.yaml
--------------------------------------------------------------------
version: '3.3'
services:
    web11:
       image: nginx
       ports:
          - 9001:80
       volumes:
          - /root/website/:/usr/share/nginx/html/
    web22:
       image: httpd
       ports:
          - 9002:80
       volumes:
          - /root/website2/:/usr/local/apache2/htdocs/
    web33:
       image: centos:centos7
       tty: true
       stdin_open: true

------------------------------------------------------------------------
root@server:~# docker-compose -f hpcsa.yaml up -d
------------------------------------------------------------------------




===========================================================================
 Dockerfile Create
===========================================================================


root@server:~#  mkdir cdac
root@server:~#  cd cdac/
root@server:~#  nano Dockerfile
----------------------------------
FROM ubuntu
RUN apt update -y
RUN apt-get install python3 -y
RUN mkdir /app/
COPY sample.py /app/
CMD ["python3","/app/sample.py"]
----------------------------------
root@server:~#  ls
root@server:~#  nano sample.py
-----------------------------
print("Hello World!!!!")
-----------------------------
root@server:~#  cat sample.py 
root@server:~#  docker build -t app1:1.0 .
root@server:~#  docker images
root@server:~#  docker run --name p1 -ti app1:1.0
Output:- Hello World"!!!!

--------------------------------------------------------------------------------

Docker_imp.txt 1. Docker Task
 a) Basic Commands: docker ps, docker ps -a, docker pull, docker run command ( Naming the container, 
    -d, port binding),docker start, docker stop, docker rm, docker rmi, docker logs, docker build command,
     docker tag, docker push.

 b) Task: 
   i) Pull the ubuntu image. Create a container using that ubuntu image and take shell, then stop container and delete container.
  ii) Create a httpd container using httpd image and bind to port 8000. (here create your website in html. 
      Copy the html file to host machine to container using Docker Volume)
 iii) Create a 2 containers using same httpd image and host it to 2 different ports like 9000 and 9010. (here create 
      your website in html. Copy the html file to host machine to container using Docker Volume)
  iv) Create a 3 containers of httpd image using docker-compose file and host the containers with different ports. (here create your website in html. Copy the html file to host machine to container using Docker Volume)
   v) Create a python program of swapping 2 numbers and build a image of that program using Dockerfile and create a container and run the container.
  vi) Build your own httpd image using Dockerfile and host it via container and push it to the docker repository.




















